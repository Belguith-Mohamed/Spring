<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:c="http://www.springframework.org/schema/c"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.3.xsd">

	<context:component-scan base-package="com.threetee.formationSpring" />

	<bean id="add1" class="com.threetee.formationSpring.model.entity.Address">
		<property name="city" value="Tunis"></property>
		<property name="road" value="Paris"></property>
		<property name="postalCode" value="1001"></property>
		<property name="id" value="1"></property>

	</bean>

	<bean id="anotherDate" class="java.time.LocalDate" factory-method="of">
		<constructor-arg index="0" value="2000" />
		<constructor-arg index="1" value="05" />
		<constructor-arg index="2" value="05" />
	</bean>

	<bean id="currentDate" class="java.time.LocalDateTime"
		factory-method="now" scope="prototype" />

	<bean id="clt1" class="com.threetee.formationSpring.model.entity.Client"
		p:id="10">
		<property name="firstName" value="Mohamed"></property>
		<property name="lastName" value="Ben Salah"></property>
		<property name="address" ref="add1"></property>
		<property name="birthDate">
			<bean class="java.util.Date" />
		</property>
	</bean>

	<bean id="clt2" class="com.threetee.formationSpring.model.entity.Client"
		p:id="10" primary="true">
		<property name="firstName" value="ALI"></property>
		<property name="lastName" value="Ben MED"></property>
		<property name="address" ref="add1"></property>
		<property name="birthDate">
			<bean class="java.util.Date">

			</bean>
		</property>
	</bean>

	<jdbc:embedded-database id="h2Datasource" type="H2">
		<jdbc:script location="classpath:data/initDb.sql" />
	</jdbc:embedded-database>

	<bean id="myDataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close" lazy-init="true">
		<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver" />
		<property name="url" value="jdbc:oracle:thin:@localhost:1521:xe" />
		<property name="username" value="compte" />
		<property name="password" value="compte" />
		<property name="initialSize" value="10" />
		<property name="maxActive" value="40" />
		<property name="maxIdle" value="20" />
	</bean>

	<bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
		<property name="jndiName" value="/jdbc/TrgDatasource" />
		<property name="resourceRef" value="true" />
	</bean>

	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="myDataSource" >
		</property>
	</bean>
	<bean id="myDataSource">
		<!-- the datasource configuration comes here -->
	</bean>
	<bean id="jdbcTemplateRepo"
		class="com.threetee.formationSpring.dao.impl.jdbc.JdbcTemplateDaoImpl">
		<property name="jdbcTemplate" ref="jdbcTemplate" />
	</bean>

	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean"
		lazy-init="true">
		<property name="dataSource" ref="dataSource" />
		<property name="annotatedClasses">
			<list>
				<value>com.threetee.formationSpring.entity.Client</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.Oracle10gDialect</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.current_session_context_class">thread</prop>
				<prop key="hibernate.hbm2ddl.auto">create</prop>
			</props>
		</property>
	</bean>

	<bean id="genericDao"
		class="com.threetee.formationSpring.dao.impl.jdbc.GenericDaoImpl">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>

	<jdbc:embedded-database id="dataSource">
		<jdbc:script location="classpath:data/schema.sql" />
		<jdbc:script location="classpath:data/test-data.sql" />
	</jdbc:embedded-database>
	
	<!-- OR IF CREDENTIALS NEEDED -->
	
	<util:properties id="dbProp" location="classpath:data/db.properties" />
	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.SimpleDriverDataSource">
		<property name="driverClass" value="#{dbProp.driverClassName}" />
		<property name="url" value="#{dbProp.url}" />
		<property name="username" value="#{dbProp.username}" />
		<property name="password" value="#{dbProp.password}" />
	</bean>
	<jdbc:initialize-database data-source="dataSource">
		<jdbc:script location="classpath:data/schema.sql" />
		<jdbc:script location="classpath:data/test-data.sql" />
	</jdbc:initialize-database>
</beans>
